/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is MPEG4IP.
 * 
 * The Initial Developer of the Original Code is Cisco Systems Inc.
 * Portions created by Cisco Systems Inc. are
 * Copyright (C) Cisco Systems Inc. 2000, 2001.  All Rights Reserved.
 * 
 * Contributor(s): 
 *		Dave Mackie		dmackie@cisco.com
 *		Bill May 		wmay@cisco.com
 *              Peter Maersk-Moller peter@maersk-moller.net(interlace, sources)
 */

#ifndef __LIVE_CONFIG_H__
#define __LIVE_CONFIG_H__

#include <sys/types.h>
#include <mp4.h>

#include "mpeg4ip_config_set.h"

#include "media_time.h"
#include "video_util_tv.h"

#define NUM_FILE_HISTORY		8

#define FILE_SOURCE				"FILE"
#define URL_SOURCE				"URL"
#ifdef ADD_RTP_SOURCE
#define RTP_SOURCE "RTP"
#endif
#ifdef ADD_DVB_SOURCE
#define DVB_SOURCE "DVB"
#endif

#define AUDIO_SOURCE_OSS		"OSS"

#define AUDIO_ENCODER_FAAC		"faac"
#define AUDIO_ENCODER_LAME		"lame"

#define AUDIO_ENCODING_NONE		"None"
#define AUDIO_ENCODING_PCM16	"PCM16"
#define AUDIO_ENCODING_MP3		"MP3"
#define AUDIO_ENCODING_AAC		"AAC"
#define AUDIO_ENCODING_AC3		"AC3"
#define AUDIO_ENCODING_VORBIS	"VORBIS"
#define AUDIO_ENCODING_AMR      "AMR"

#define VIDEO_SOURCE_V4L		"V4L"
#ifdef ADD_RTP_SOURCE
#define AUDIO_SOURCE_RTP "RTP"
#define VIDEO_SOURCE_RTP "RTP"
#define MPEG2_TS 0x1
#define MPEG2_PS 0x2
#define MPEG2_ES 0x3
#endif
#ifdef ADD_DVB_SOURCE
#define VIDEO_SOURCE_DVB "DVB"
#endif


#define VIDEO_ENCODER_FFMPEG	"ffmpeg"
#define VIDEO_ENCODER_DIVX		"divx"
#define VIDEO_ENCODER_H26L		"h26l"
#define VIDEO_ENCODER_XVID		"xvid"
#define VIDEO_ENCODER_H261              "h261"

#define VIDEO_ENCODING_NONE		"None"
#define VIDEO_ENCODING_YUV12	"YUV12"
#define VIDEO_ENCODING_MPEG2	"MPEG2"
#define VIDEO_ENCODING_MPEG4	"MPEG4"
#define VIDEO_ENCODING_H26L		"H26L"
#define VIDEO_ENCODING_H261     "H261"
#define VIDEO_ENCODING_MPEG2    "MPEG2"
#define VIDEO_ENCODING_H263     "H263"

#define VIDEO_NTSC_FRAME_RATE	((float)29.97)
#define VIDEO_PAL_FRAME_RATE	((float)25.00)

#define VIDEO_STD_ASPECT_RATIO 	((float)4.0 / 3.0)	// standard 4:3
#define VIDEO_LB1_ASPECT_RATIO 	((float)2.35)	// typical "widescreen" format
#define VIDEO_LB2_ASPECT_RATIO 	((float)1.85)	// alternate widescreen format
#define VIDEO_LB3_ASPECT_RATIO 	((float)16.0 / 9.0)	// hdtv 16:9

#define MP3_MPEG1_SAMPLES_PER_FRAME	1152	// for MPEG-1 bitrates
#define MP3_MPEG2_SAMPLES_PER_FRAME	576		// for MPEG-2 bitrates

#define VIDEO_SIGNAL_PAL 0
#define VIDEO_SIGNAL_NTSC 1
#define VIDEO_SIGNAL_SECAM 2

#define VIDEO_FILTER_NONE      "none"
#define VIDEO_FILTER_DEINTERLACE "deinterlace - blend"
#define VIDEO_FILTER_DECIMATE  "deinterlace - decimate"

// to decide if we overwrite or not
#define FILE_MP4_OVERWRITE 1
#define FILE_MP4_APPEND 0
#define FILE_MP4_CREATE_NEW 2

// forward declarations
class CVideoCapabilities;
class CAudioCapabilities;
class CLiveConfig;
#ifdef ADD_RTP_SOURCE
class CRTPVideoCapabilities;
#endif
#ifdef ADD_DVB_SOURCE
class CDVBVideoCapabilities;
#endif

// some configuration utility routines
void GenerateMpeg4VideoConfig(CLiveConfig* pConfig);
bool GenerateSdpFile(CLiveConfig* pConfig);
struct session_desc_t;

session_desc_t *createSdpDescription(CLiveConfig *pConfig, 
				     const char *sAudioDestAddr,
				     const char *sVideoDestAddr,
				     int ttl,
				     bool allow_rtcp,
				     int video_port,
				     int audio_port);


DECLARE_CONFIG(CONFIG_APP_REAL_TIME);
DECLARE_CONFIG(CONFIG_APP_REAL_TIME_SCHEDULER);
DECLARE_CONFIG(CONFIG_APP_DURATION);
DECLARE_CONFIG(CONFIG_APP_DURATION_UNITS);
DECLARE_CONFIG(CONFIG_APP_FILE_0);
DECLARE_CONFIG(CONFIG_APP_FILE_1);
DECLARE_CONFIG(CONFIG_APP_FILE_2);
DECLARE_CONFIG(CONFIG_APP_FILE_3);
DECLARE_CONFIG(CONFIG_APP_FILE_4);
DECLARE_CONFIG(CONFIG_APP_FILE_5);
DECLARE_CONFIG(CONFIG_APP_FILE_6);
DECLARE_CONFIG(CONFIG_APP_FILE_7);
DECLARE_CONFIG(CONFIG_APP_DEBUG);
DECLARE_CONFIG(CONFIG_APP_LOGLEVEL);
DECLARE_CONFIG(CONFIG_APP_SIGNAL_HALT);

DECLARE_CONFIG(CONFIG_AUDIO_ENABLE);
DECLARE_CONFIG(CONFIG_AUDIO_SOURCE_TYPE);
DECLARE_CONFIG(CONFIG_AUDIO_SOURCE_NAME);
DECLARE_CONFIG(CONFIG_AUDIO_MIXER_NAME);
DECLARE_CONFIG(CONFIG_AUDIO_INPUT_NAME);
DECLARE_CONFIG(CONFIG_AUDIO_SOURCE_TRACK);
DECLARE_CONFIG(CONFIG_AUDIO_CHANNELS);
DECLARE_CONFIG(CONFIG_AUDIO_SAMPLE_RATE);
DECLARE_CONFIG(CONFIG_AUDIO_BIT_RATE_KBPS);
DECLARE_CONFIG(CONFIG_AUDIO_BIT_RATE);
DECLARE_CONFIG(CONFIG_AUDIO_ENCODING);
DECLARE_CONFIG(CONFIG_AUDIO_ENCODER);
DECLARE_CONFIG(CONFIG_AUDIO_OSS_USE_SMALL_FRAGS);
DECLARE_CONFIG(CONFIG_AUDIO_OSS_FRAGMENTS);
DECLARE_CONFIG(CONFIG_AUDIO_OSS_FRAG_SIZE);

DECLARE_CONFIG(CONFIG_VIDEO_ENABLE);
DECLARE_CONFIG(CONFIG_VIDEO_SOURCE_TYPE);
DECLARE_CONFIG(CONFIG_VIDEO_SOURCE_NAME);
DECLARE_CONFIG(CONFIG_VIDEO_INPUT);
DECLARE_CONFIG(CONFIG_VIDEO_SIGNAL);
DECLARE_CONFIG(CONFIG_VIDEO_TUNER);
DECLARE_CONFIG(CONFIG_VIDEO_CHANNEL_LIST_INDEX);
DECLARE_CONFIG(CONFIG_VIDEO_CHANNEL_INDEX);
DECLARE_CONFIG(CONFIG_VIDEO_SOURCE_TRACK);
DECLARE_CONFIG(CONFIG_VIDEO_PREVIEW);
DECLARE_CONFIG(CONFIG_VIDEO_RAW_PREVIEW);
DECLARE_CONFIG(CONFIG_VIDEO_ENCODED_PREVIEW);
DECLARE_CONFIG(CONFIG_VIDEO_ENCODER);
DECLARE_CONFIG(CONFIG_VIDEO_ENCODING);
DECLARE_CONFIG(CONFIG_VIDEO_RAW_WIDTH);
DECLARE_CONFIG(CONFIG_VIDEO_RAW_HEIGHT);
DECLARE_CONFIG(CONFIG_VIDEO_ASPECT_RATIO);
DECLARE_CONFIG(CONFIG_VIDEO_FRAME_RATE);
DECLARE_CONFIG(CONFIG_VIDEO_KEY_FRAME_INTERVAL);
DECLARE_CONFIG(CONFIG_VIDEO_BIT_RATE);
DECLARE_CONFIG(CONFIG_VIDEO_FORCE_PROFILE_ID);
DECLARE_CONFIG(CONFIG_VIDEO_PROFILE_ID);
DECLARE_CONFIG(CONFIG_VIDEO_BRIGHTNESS);
DECLARE_CONFIG(CONFIG_VIDEO_HUE);
DECLARE_CONFIG(CONFIG_VIDEO_COLOR);
DECLARE_CONFIG(CONFIG_VIDEO_CONTRAST);
DECLARE_CONFIG(CONFIG_VIDEO_TIMEBITS);
DECLARE_CONFIG(CONFIG_V4L_CACHE_TIMESTAMP);
DECLARE_CONFIG(CONFIG_VIDEO_H261_QUALITY);
DECLARE_CONFIG(CONFIG_VIDEO_H261_QUALITY_ADJ_FRAMES);
DECLARE_CONFIG(CONFIG_VIDEO_CAP_BUFF_COUNT);
DECLARE_CONFIG(CONFIG_VIDEO_FILTER);
DECLARE_CONFIG(CONFIG_VIDEO_MPEG4_PAR_WIDTH);
DECLARE_CONFIG(CONFIG_VIDEO_MPEG4_PAR_HEIGHT);
DECLARE_CONFIG(CONFIG_XVID10_VIDEO_QUALITY);
DECLARE_CONFIG(CONFIG_XVID10_USE_GMC);
DECLARE_CONFIG(CONFIG_XVID10_USE_QPEL);
DECLARE_CONFIG(CONFIG_XVID10_USE_LUMIMASK);
DECLARE_CONFIG(CONFIG_XVID10_USE_INTERLACING);

DECLARE_CONFIG(CONFIG_RECORD_ENABLE);
DECLARE_CONFIG(CONFIG_RECORD_RAW_AUDIO);
DECLARE_CONFIG(CONFIG_RECORD_RAW_VIDEO);
DECLARE_CONFIG(CONFIG_RECORD_ENCODED_AUDIO);
DECLARE_CONFIG(CONFIG_RECORD_ENCODED_VIDEO);
DECLARE_CONFIG(CONFIG_RECORD_MP4_FILE_NAME);
DECLARE_CONFIG(CONFIG_RECORD_MP4_HINT_TRACKS);
DECLARE_CONFIG(CONFIG_RECORD_MP4_OVERWRITE);
DECLARE_CONFIG(CONFIG_RECORD_MP4_OPTIMIZE);
DECLARE_CONFIG(CONFIG_RECORD_MP4_FILE_STATUS);

DECLARE_CONFIG(CONFIG_RTP_ENABLE);
DECLARE_CONFIG(CONFIG_RTP_DEST_ADDRESS); // for video
DECLARE_CONFIG(CONFIG_RTP_AUDIO_DEST_PORT);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_DEST_PORT);
DECLARE_CONFIG(CONFIG_RTP_PAYLOAD_SIZE);
DECLARE_CONFIG(CONFIG_RTP_MCAST_TTL);
DECLARE_CONFIG(CONFIG_RTP_DISABLE_TS_OFFSET);
DECLARE_CONFIG(CONFIG_RTP_USE_SSM);
DECLARE_CONFIG(CONFIG_SDP_FILE_NAME);
DECLARE_CONFIG(CONFIG_RTP_AUDIO_DEST_ADDRESS);
DECLARE_CONFIG(CONFIG_RTP_USE_MP3_PAYLOAD_14);
DECLARE_CONFIG(CONFIG_RTP_NO_B_RR_0);
#ifdef ADD_RTP_SOURCE
DECLARE_CONFIG(CONFIG_RTP_AUDIO_SOURCE_MONITOR);
//DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_ADDRESS);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_PORT);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_AUDIO_PID);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_VIDEO_PID);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_TYPE);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_BUFFERS);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_RECV_LOOP);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_RECV_TIMEOUT);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_SEQUENCE_MAX_SEARCH);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_SEQUENCE_SEARCH_TIMEOUT);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_PTS_DELAY);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_WIDTH);
DECLARE_CONFIG(CONFIG_RTP_VIDEO_SOURCE_HEIGHT);
DECLARE_CONFIG(CONFIG_VIDEO_ASPECT_RATIO_FORCED);
#endif
DECLARE_CONFIG(CONFIG_RAW_ENABLE);
DECLARE_CONFIG(CONFIG_RAW_PCM_FILE_NAME);
DECLARE_CONFIG(CONFIG_RAW_PCM_FIFO);
DECLARE_CONFIG(CONFIG_RAW_YUV_FILE_NAME);
DECLARE_CONFIG(CONFIG_RAW_YUV_FIFO);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_ENABLE);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_FILE1);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_FILE2);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_FILE3);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_FILE4);
DECLARE_CONFIG(CONFIG_FEEDER_SINK_FILE5);

// normally this would be in a .cpp file
// but we have it here to make it easier to keep
// the enumerator list and the variables in sync

#ifdef DECLARE_CONFIG_VARIABLES
static SConfigVariable MyConfigVariables[] = {
	// APP
  CONFIG_BOOL(CONFIG_APP_REAL_TIME, "isRealTime", true),
  CONFIG_BOOL(CONFIG_APP_REAL_TIME_SCHEDULER, "useRealTimeScheduler", true),
  CONFIG_INT(CONFIG_APP_DURATION, "duration", 1),
  CONFIG_INT(CONFIG_APP_DURATION_UNITS, "durationUnits", 60),

  CONFIG_STRING(CONFIG_APP_FILE_0, "file0", ""),
  CONFIG_STRING(CONFIG_APP_FILE_1, "file1", ""),
  CONFIG_STRING(CONFIG_APP_FILE_2, "file2", ""),
  CONFIG_STRING(CONFIG_APP_FILE_3, "file3", ""),
  CONFIG_STRING(CONFIG_APP_FILE_4, "file4", ""),
  CONFIG_STRING(CONFIG_APP_FILE_5, "file5", ""),
  CONFIG_STRING(CONFIG_APP_FILE_6, "file6", ""),
  CONFIG_STRING(CONFIG_APP_FILE_7, "file7", ""),

  CONFIG_BOOL(CONFIG_APP_DEBUG, "debug", false),
  CONFIG_INT(CONFIG_APP_LOGLEVEL, "logLevel", 0),
  CONFIG_STRING(CONFIG_APP_SIGNAL_HALT, "signalHalt", "sighup"),
  // AUDIO

  CONFIG_BOOL(CONFIG_AUDIO_ENABLE, "audioEnable", true),
  CONFIG_STRING(CONFIG_AUDIO_SOURCE_TYPE, "audioSourceType", AUDIO_SOURCE_OSS),
  CONFIG_STRING(CONFIG_AUDIO_SOURCE_NAME, "audioDevice", "/dev/dsp"),
  CONFIG_STRING(CONFIG_AUDIO_MIXER_NAME, "audioMixer", "/dev/mixer"),
  CONFIG_STRING(CONFIG_AUDIO_INPUT_NAME, "audioInput", "mix"),

  CONFIG_INT(CONFIG_AUDIO_SOURCE_TRACK, "audioSourceTrack", 0),
  CONFIG_INT(CONFIG_AUDIO_CHANNELS, "audioChannels", 2),
  CONFIG_INT(CONFIG_AUDIO_SAMPLE_RATE, "audioSampleRate", 44100),
  CONFIG_INT(CONFIG_AUDIO_BIT_RATE_KBPS, "audioBitRate", 128),
  CONFIG_INT(CONFIG_AUDIO_BIT_RATE, "audioBitRateBps",128000),
  CONFIG_STRING(CONFIG_AUDIO_ENCODING, "audioEncoding", AUDIO_ENCODING_MP3),
  CONFIG_STRING(CONFIG_AUDIO_ENCODER, "audioEncoder", AUDIO_ENCODER_LAME),

  CONFIG_BOOL(CONFIG_AUDIO_OSS_USE_SMALL_FRAGS, "audioOssUseSmallFrags", true),
  CONFIG_INT(CONFIG_AUDIO_OSS_FRAGMENTS, "audioOssFragments", 128),
  CONFIG_INT(CONFIG_AUDIO_OSS_FRAG_SIZE, "audioOssFragSize", 8),


  // VIDEO

  CONFIG_BOOL_HELP(CONFIG_VIDEO_ENABLE, "videoEnable", true, "Enable Video"),
  CONFIG_STRING(CONFIG_VIDEO_SOURCE_TYPE, "videoSourceType", VIDEO_SOURCE_V4L),
  CONFIG_STRING(CONFIG_VIDEO_SOURCE_NAME, "videoDevice", "/dev/video0"),
  CONFIG_INT(CONFIG_VIDEO_INPUT, "videoInput", 1),
  CONFIG_INT(CONFIG_VIDEO_SIGNAL, "videoSignal", VIDEO_SIGNAL_NTSC),

  CONFIG_INT(CONFIG_VIDEO_TUNER, "videoTuner", -1),
  CONFIG_INT(CONFIG_VIDEO_CHANNEL_LIST_INDEX, "videoChannelListIndex", 0),
  CONFIG_INT(CONFIG_VIDEO_CHANNEL_INDEX, "videoChannelIndex", 1),

  CONFIG_INT(CONFIG_VIDEO_SOURCE_TRACK, "videoSourceTrack", 0),

  CONFIG_BOOL(CONFIG_VIDEO_PREVIEW, "videoPreview", true),
  CONFIG_BOOL(CONFIG_VIDEO_RAW_PREVIEW, "videoRawPreview", false),
  CONFIG_BOOL(CONFIG_VIDEO_ENCODED_PREVIEW, "videoEncodedPreview", true),

  CONFIG_STRING(CONFIG_VIDEO_ENCODER, "videoEncoder", VIDEO_ENCODER_XVID),
  CONFIG_STRING(CONFIG_VIDEO_ENCODING, "videoEncoding", VIDEO_ENCODING_MPEG4),

  CONFIG_INT(CONFIG_VIDEO_RAW_WIDTH, "videoRawWidth", 320),
  CONFIG_INT(CONFIG_VIDEO_RAW_HEIGHT, "videoRawHeight", 240),
  CONFIG_FLOAT(CONFIG_VIDEO_ASPECT_RATIO, "videoAspectRatio",
	       VIDEO_STD_ASPECT_RATIO),
  CONFIG_FLOAT(CONFIG_VIDEO_FRAME_RATE, "videoFrameRate", 
	       VIDEO_NTSC_FRAME_RATE),
  CONFIG_FLOAT(CONFIG_VIDEO_KEY_FRAME_INTERVAL, "videoKeyFrameInterval", 
	       2.0),

  CONFIG_INT(CONFIG_VIDEO_BIT_RATE, "videoBitRate",500),
  CONFIG_BOOL(CONFIG_VIDEO_FORCE_PROFILE_ID, "videoForceProfileId", false),
  CONFIG_INT(CONFIG_VIDEO_PROFILE_ID, "videoProfileId",MPEG4_SP_L3),

  CONFIG_INT(CONFIG_VIDEO_BRIGHTNESS, "videoBrightness", 50),
  CONFIG_INT(CONFIG_VIDEO_HUE, "videoHue", 50),
  CONFIG_INT(CONFIG_VIDEO_COLOR, "videoColor", 50),
  CONFIG_INT(CONFIG_VIDEO_CONTRAST, "videoContrast", 50),

  CONFIG_INT(CONFIG_VIDEO_TIMEBITS, "videoTimebits", 0),

  CONFIG_BOOL(CONFIG_V4L_CACHE_TIMESTAMP, "videoTimestampCache", true),
  CONFIG_INT(CONFIG_VIDEO_H261_QUALITY, "videoH261Quality", 10),
  CONFIG_INT(CONFIG_VIDEO_H261_QUALITY_ADJ_FRAMES, "videoH261QualityAdjFrames", 8),

  CONFIG_INT(CONFIG_VIDEO_CAP_BUFF_COUNT, "videoCaptureBuffersCount", 16),
  CONFIG_STRING(CONFIG_VIDEO_FILTER, "videoFilter", "none"),
  CONFIG_INT(CONFIG_VIDEO_MPEG4_PAR_WIDTH, "videoMpeg4ParWidth", 0),
  CONFIG_INT(CONFIG_VIDEO_MPEG4_PAR_HEIGHT, "videoMpeg4ParHeight", 0),

  CONFIG_INT(CONFIG_XVID10_VIDEO_QUALITY, "xvid10VideoQuality", 6),
  CONFIG_BOOL(CONFIG_XVID10_USE_GMC, "xvid10UseGmc", false),
  CONFIG_BOOL(CONFIG_XVID10_USE_QPEL, "xvid10UseQpel", false),
  CONFIG_BOOL(CONFIG_XVID10_USE_LUMIMASK, "xvid10UseLumimask", false),
  CONFIG_BOOL(CONFIG_XVID10_USE_INTERLACING, "xvid10UseInterlacing", false),
  
  // RECORD
  CONFIG_BOOL(CONFIG_RECORD_ENABLE, "recordEnable", true),
  CONFIG_BOOL(CONFIG_RECORD_RAW_AUDIO, "recordRawAudio", false),
  CONFIG_BOOL(CONFIG_RECORD_RAW_VIDEO, "recordRawVideo", false),
  CONFIG_BOOL(CONFIG_RECORD_ENCODED_AUDIO, "recordEncodedAudio", true),
  CONFIG_BOOL(CONFIG_RECORD_ENCODED_VIDEO, "recordEncodedVideo", true),

  CONFIG_STRING(CONFIG_RECORD_MP4_FILE_NAME, "recordMp4File", "capture.mp4"),
  CONFIG_BOOL(CONFIG_RECORD_MP4_HINT_TRACKS, "recordMp4HintTracks", true),
  CONFIG_BOOL(CONFIG_RECORD_MP4_OVERWRITE, "recordMp4Overwrite", true),
  CONFIG_BOOL(CONFIG_RECORD_MP4_OPTIMIZE, "recordMp4Optimize", false),
  CONFIG_INT(CONFIG_RECORD_MP4_FILE_STATUS, "recordMp4FileStatus", FILE_MP4_OVERWRITE),

  // RTP
  CONFIG_BOOL(CONFIG_RTP_ENABLE, "rtpEnable", false),
  CONFIG_STRING(CONFIG_RTP_DEST_ADDRESS, "rtpDestAddress", "224.1.2.3"),
  CONFIG_STRING(CONFIG_RTP_AUDIO_DEST_ADDRESS, "audioRtpDestAddress", 
		"224.1.2.3"),

  CONFIG_INT(CONFIG_RTP_AUDIO_DEST_PORT, "rtpAudioDestPort", 20002),
  CONFIG_INT(CONFIG_RTP_VIDEO_DEST_PORT, "rtpVideoDestPort", 20000),

  CONFIG_INT(CONFIG_RTP_PAYLOAD_SIZE, "rtpPayloadSize", 1460),
  CONFIG_INT(CONFIG_RTP_MCAST_TTL, "rtpMulticastTtl", 15),

  CONFIG_BOOL(CONFIG_RTP_DISABLE_TS_OFFSET, "rtpDisableTimestampOffset", false),
  CONFIG_BOOL(CONFIG_RTP_USE_SSM, "rtpUseSingleSourceMulticast", false),

  CONFIG_STRING(CONFIG_SDP_FILE_NAME, "sdpFile", "capture.sdp"),

  CONFIG_BOOL(CONFIG_RTP_USE_MP3_PAYLOAD_14, "rtpUseMp3RtpPayload14", false),
  CONFIG_BOOL(CONFIG_RTP_NO_B_RR_0, "rtpNoBRR0", false),
#ifdef ADD_RTP_SOURCE
  CONFIG_BOOL(CONFIG_RTP_AUDIO_SOURCE_MONITOR, "rtpAudioSourceMonitor", false),
  //CONFIG_STRING(CONFIG_RTP_VIDEO_SOURCE_ADDRESS, "rtpVideoSourceAddress", "224.1.3.3"),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_PORT, "rtpVideoSourcePort", 40000),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_AUDIO_PID, "rtpVideoSourceAudioPid", -1),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_VIDEO_PID, "rtpVideoSourceVideoPid", -1),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_TYPE, "rtpVideoSourceType", MPEG2_TS),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_BUFFERS, "rtpVideoSourceBuffers", 16),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_RECV_LOOP, "rtpReceiveLoop", 16),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_RECV_TIMEOUT, "rtpReceiveTimeout", 40),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_SEQUENCE_MAX_SEARCH, "rtpSequenceMaxSearch", 256),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_SEQUENCE_SEARCH_TIMEOUT, "rtpSequenceSearchTimeout", 10),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_PTS_DELAY, "rtpVideoSourcePtsDelay", 39600),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_WIDTH, "rtpVideoSourceWidth", 0),
  CONFIG_INT(CONFIG_RTP_VIDEO_SOURCE_HEIGHT, "rtpVideoSourceHeight", 0),
  CONFIG_FLOAT(CONFIG_VIDEO_ASPECT_RATIO_FORCED, "forcedAspectRatio", 0.0),
#endif

  // RAW sink

  CONFIG_BOOL(CONFIG_RAW_ENABLE, "rawEnable", false),
  CONFIG_STRING(CONFIG_RAW_PCM_FILE_NAME, "rawAudioFile", "capture.pcm"),
  CONFIG_BOOL(CONFIG_RAW_PCM_FIFO, "rawAudioUseFifo", false),
  
  CONFIG_STRING(CONFIG_RAW_YUV_FILE_NAME, "rawVideoFile", "capture.yuv"),
  CONFIG_BOOL(CONFIG_RAW_YUV_FIFO, "rawVideoUseFifo", false),

  // FEEDER SINK
  CONFIG_BOOL(CONFIG_FEEDER_SINK_ENABLE, "cascadeEnable", false),
  CONFIG_STRING(CONFIG_FEEDER_SINK_FILE1, "cascadeFile1", ""),
  CONFIG_STRING(CONFIG_FEEDER_SINK_FILE2, "cascadeFile2", ""),
  CONFIG_STRING(CONFIG_FEEDER_SINK_FILE3, "cascadeFile3", ""),
  CONFIG_STRING(CONFIG_FEEDER_SINK_FILE4, "cascadeFile4", ""),
  CONFIG_STRING(CONFIG_FEEDER_SINK_FILE5, "cascadeFile5", ""),
  
};
#endif /* DECLARE_CONFIG_VARIABLES */


class CLiveConfig : public CConfigSet {
public:
	CLiveConfig(SConfigVariable* variables, 
		config_index_t numVariables, const char* defaultFileName);

	~CLiveConfig();

	// recalculate derived values
	void Update();
	void UpdateFileHistory(const char* fileName);
	void UpdateVideo();
	void CalculateVideoFrameSize();
	void UpdateVideoProfile(void);
	void UpdateAudio();
	void UpdateRecord();

	bool IsOneSource();
	bool IsCaptureVideoSource();
	bool IsCaptureAudioSource();
	bool IsFileVideoSource();
	bool IsFileAudioSource();

	bool SourceRawVideo() {
		return (GetBoolValue(CONFIG_VIDEO_RAW_PREVIEW)
			|| (GetBoolValue(CONFIG_RECORD_ENABLE)
				&& GetBoolValue(CONFIG_RECORD_RAW_VIDEO))
			|| GetBoolValue(CONFIG_RAW_ENABLE)) || GetBoolValue(CONFIG_FEEDER_SINK_ENABLE);
	}

	bool SourceRawAudio() {
		return (GetBoolValue(CONFIG_RECORD_ENABLE)
				&& GetBoolValue(CONFIG_RECORD_RAW_AUDIO))
			|| GetBoolValue(CONFIG_RAW_ENABLE);
	}
	
	CLiveConfig* GetParentConfig()
	{
		return m_parentConfig;
	}
	
	void SetParentConfig(CLiveConfig* parentConfig)
	{
		m_parentConfig=parentConfig;
	}
	
public:
	// command line configuration
	bool		m_appAutomatic;

	// derived, shared video configuration
	CVideoCapabilities* m_videoCapabilities;
#ifdef ADD_RTP_SOURCE
	CRTPVideoCapabilities *m_RTPvideoCapabilities;
#endif
#ifdef ADD_DVB_SOURCE
	CDVBVideoCapabilities *m_DVBvideoCapabilities;
#endif
	bool		m_videoEncode;
	u_int32_t	m_videoPreviewWindowId;
	u_int16_t	m_videoWidth;
	u_int16_t	m_videoHeight;
	u_int16_t	m_videoMaxWidth;
	u_int16_t	m_videoMaxHeight;
	u_int32_t	m_ySize;
	u_int32_t	m_uvSize;
	u_int32_t	m_yuvSize;
	bool		m_videoNeedRgbToYuv;
	u_int32_t	m_videoMpeg4ConfigLength;
	u_int8_t*	m_videoMpeg4Config;
	u_int32_t	m_videoMaxVopSize;
	u_int8_t	m_videoTimeIncrBits;

	u_int8_t        m_videoMpeg4ProfileId;
	// derived, shared audio configuration
	CAudioCapabilities* m_audioCapabilities;
	bool		m_audioEncode;

	// derived, shared file configuration
	u_int64_t	m_recordEstFileSize;
	
	//Parent Config Pointer
	CLiveConfig* m_parentConfig;
};

#endif /* __LIVE_CONFIG_H__ */

